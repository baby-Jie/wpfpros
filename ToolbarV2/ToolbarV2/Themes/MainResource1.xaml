<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:system="clr-namespace:System;assembly=mscorlib"
                    xmlns:localControl="clr-namespace:ToolbarV2.Controls">
    <!--Region 变量管理-->
    <!--主菜单宽高-->
    <system:Double x:Key="GlobalMenuWidthKey">80</system:Double>

    <system:Double x:Key="GlobalMenuHeightKey">80</system:Double>

    <!--主菜单图标宽高-->
    <system:Double x:Key="GlobalMenuIconWidthKey">22</system:Double>

    <system:Double x:Key="GlobalMenuIconHeightKey">22</system:Double>

    <system:Double x:Key="GlobalPopVerticalOffset">-10</system:Double>

    <!--Endregion 变量管理-->

    <!--Region 颜色管理-->

    <!--主界面背景色-->
    <SolidColorBrush x:Key="GlobalMainBackgroundBrush"
                     Color="#FFF7F9FB">
    </SolidColorBrush>

    <!--按钮被选择的背景色-->
    <SolidColorBrush x:Key="MenuButtonSelectedBackgroundBrush"
                     Color="#3EBF88">
    </SolidColorBrush>

    <!--按钮正常前景色-->
    <SolidColorBrush x:Key="MenuButtonNormalForegroundBrush"
                     Color="#767782">
    </SolidColorBrush>

    <!--按钮选中前景色-->
    <SolidColorBrush x:Key="MenuButtonSelectedForegroundBrush"
                     Color="White">
    </SolidColorBrush>

    <!--设置按钮选中颜色-->
    <SolidColorBrush x:Key="SettingButtonSelectedBackgroundBrush"
                     Color="#EBEEF5">
    </SolidColorBrush>

    <!--分割填充颜色-->
    <SolidColorBrush x:Key="SplitFillBrush"
                     Color="#EBEEF5">
    </SolidColorBrush>

    <!--退出按钮前景色-->
    <SolidColorBrush x:Key="QuitButtonForegroundBrush"
                     Color="#EFA0A2">
    </SolidColorBrush>

    <!--主界面边框颜色-->
    <SolidColorBrush x:Key="MainBorderBrush"
                     Color="#E4E7ED">
    </SolidColorBrush>

    <!--Endregion 颜色管理-->

    <!--Region 样式管理-->

    <!--菜单按钮样式-->
    <Style x:Key="MenuButtonDefaultStyle"
           TargetType="{x:Type localControl:MenuButton}">
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Width"
                Value="{StaticResource GlobalMenuWidthKey}">
        </Setter>
        <Setter Property="Height"
                Value="{StaticResource GlobalMenuHeightKey}">
        </Setter>

        <Setter Property="Foreground"
                Value="{StaticResource MenuButtonNormalForegroundBrush}">
        </Setter>

        <Setter Property="Background"
                Value="#01000000">
        </Setter>

        <Setter Property="FontSize"
                Value="14" />

        <Setter Property="MainIconRadiux"
                Value="{StaticResource GlobalMenuIconWidthKey}" />

        <Setter Property="Padding"
                Value="0" />

        <Setter Property="SubGeometry"
                Value="{StaticResource GlobalMenuTriangleGeometry}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type localControl:MenuButton}">

                    <Border Background="{TemplateBinding Background}"
                            Margin="{TemplateBinding Padding}"
                            x:Name="BorderRoot">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="30*" />
                                <RowDefinition Height="28*" />
                            </Grid.RowDefinitions>

                            <Grid x:Name="IconGrid">
                                <Path Data="{TemplateBinding MainGeometry}"
                                      Stretch="Uniform"
                                      Margin="0 16 0 0"
                                      Fill="{TemplateBinding Foreground}"
                                      Width="{TemplateBinding MainIconRadiux}"
                                      Height="{TemplateBinding MainIconRadiux}"
                                      RenderTransformOrigin="0.5,0.5"
                                      FlowDirection="LeftToRight"
                                      x:Name="MainIconPath">
                                    <Path.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform />
                                            <SkewTransform />
                                            <RotateTransform Angle="{Binding RelativeSource={RelativeSource TemplatedParent} , Path=MainRotateAngle}" />
                                            <TranslateTransform />
                                        </TransformGroup>
                                    </Path.RenderTransform>
                                </Path>

                                <Path Data="{TemplateBinding SubGeometry}"
                                      Stretch="Uniform"
                                      Margin="5 5 0 0"
                                      Fill="{TemplateBinding Foreground}"
                                      RenderTransformOrigin="0.5,0.5"
                                      FlowDirection="LeftToRight"
                                      Width="8"
                                      Height="8"
                                      HorizontalAlignment="Left"
                                      VerticalAlignment="Top"
                                      Visibility="Collapsed"
                                      x:Name="SubIconPath">
                                </Path>
                            </Grid>

                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              x:Name="content"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Margin="0,-6,0,0"
                                              Grid.Row="1" />
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>

                        <Trigger Property="HasSubMenu"
                                 Value="True">
                            <Setter Property="Visibility"
                                    Value="Visible"
                                    TargetName="SubIconPath" />
                        </Trigger>

                        <Trigger Property="IsMirror"
                                 Value="True">
                            <Setter Property="FlowDirection"
                                    Value="RightToLeft"
                                    TargetName="MainIconPath">
                            </Setter>
                        </Trigger>

                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Foreground"
                                    Value="{StaticResource MenuButtonSelectedBackgroundBrush}" />
                        </Trigger>

                        <Trigger Property="IsSelected"
                                 Value="True">
                            <Setter Property="Background"
                                    Value="{StaticResource MenuButtonSelectedBackgroundBrush}" />
                            <Setter Property="Foreground"
                                    Value="{StaticResource MenuButtonSelectedForegroundBrush}" />
                        </Trigger>

                        <!--<Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter Property="Opacity"
                                    Value="0.5" />
                        </Trigger>-->

                        <!--左上角-->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsCorner"
                                           Value="True" />
                                <Condition Property="CornerPosition"
                                           Value="0" />
                            </MultiTrigger.Conditions>

                            <Setter Property="CornerRadius"
                                    TargetName="BorderRoot"
                                    Value="10 0 0 0">
                            </Setter>
                        </MultiTrigger>

                        <!--右上角-->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsCorner"
                                           Value="True" />
                                <Condition Property="CornerPosition"
                                           Value="1" />
                            </MultiTrigger.Conditions>

                            <Setter Property="CornerRadius"
                                    TargetName="BorderRoot"
                                    Value="0 10 0 0">
                            </Setter>
                        </MultiTrigger>

                        <!--右下角-->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsCorner"
                                           Value="True" />
                                <Condition Property="CornerPosition"
                                           Value="2" />
                            </MultiTrigger.Conditions>

                            <Setter Property="CornerRadius"
                                    TargetName="BorderRoot"
                                    Value="0 0 10 0">
                            </Setter>
                        </MultiTrigger>

                        <!--左下角-->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsCorner"
                                           Value="True" />
                                <Condition Property="CornerPosition"
                                           Value="3" />
                            </MultiTrigger.Conditions>

                            <Setter Property="CornerRadius"
                                    TargetName="BorderRoot"
                                    Value="0 0 0 10">
                            </Setter>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MenuButtonInFocusStyle"
           TargetType="{x:Type localControl:MenuButton}">
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Width"
                Value="60">
        </Setter>
        <Setter Property="Height"
                Value="60">
        </Setter>

        <Setter Property="Foreground"
                Value="{StaticResource MenuButtonNormalForegroundBrush}">
        </Setter>

        <Setter Property="Background"
                Value="#01000000">
        </Setter>

        <Setter Property="FontSize"
                Value="12" />

        <Setter Property="MainIconRadiux"
                Value="18" />

        <Setter Property="Padding"
                Value="0" />

        <Setter Property="SubGeometry"
                Value="{StaticResource GlobalMenuTriangleGeometry}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type localControl:MenuButton}">

                    <Border Background="{TemplateBinding Background}"
                            Margin="{TemplateBinding Padding}"
                            x:Name="BorderRoot">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="30*" />
                                <RowDefinition Height="28*" />
                            </Grid.RowDefinitions>

                            <Grid x:Name="IconGrid">
                                <Path Data="{TemplateBinding MainGeometry}"
                                      Stretch="Uniform"
                                      Margin="0 10 0 0"
                                      Fill="{TemplateBinding Foreground}"
                                      Width="{TemplateBinding MainIconRadiux}"
                                      Height="{TemplateBinding MainIconRadiux}"
                                      RenderTransformOrigin="0.5,0.5"
                                      FlowDirection="LeftToRight"
                                      x:Name="MainIconPath">
                                    <Path.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform />
                                            <SkewTransform />
                                            <RotateTransform Angle="{Binding RelativeSource={RelativeSource TemplatedParent} , Path=MainRotateAngle}" />
                                            <TranslateTransform />
                                        </TransformGroup>
                                    </Path.RenderTransform>
                                </Path>

                                <Path Data="{TemplateBinding SubGeometry}"
                                      Stretch="Uniform"
                                      Margin="5 5 0 0"
                                      Fill="{TemplateBinding Foreground}"
                                      RenderTransformOrigin="0.5,0.5"
                                      FlowDirection="LeftToRight"
                                      Width="8"
                                      Height="8"
                                      HorizontalAlignment="Left"
                                      VerticalAlignment="Top"
                                      Visibility="Collapsed"
                                      x:Name="SubIconPath">
                                </Path>
                            </Grid>

                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              x:Name="content"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Margin="0,-6,0,0"
                                              Grid.Row="1" />
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>

                        <Trigger Property="HasSubMenu"
                                 Value="True">
                            <Setter Property="Visibility"
                                    Value="Visible"
                                    TargetName="SubIconPath" />
                        </Trigger>

                        <Trigger Property="IsMirror"
                                 Value="True">
                            <Setter Property="FlowDirection"
                                    Value="RightToLeft"
                                    TargetName="MainIconPath">
                            </Setter>
                        </Trigger>

                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Foreground"
                                    Value="{StaticResource MenuButtonSelectedBackgroundBrush}" />
                        </Trigger>

                        <Trigger Property="IsSelected"
                                 Value="True">
                            <Setter Property="Background"
                                    Value="{StaticResource MenuButtonSelectedBackgroundBrush}" />
                            <Setter Property="Foreground"
                                    Value="{StaticResource MenuButtonSelectedForegroundBrush}" />
                        </Trigger>

                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter Property="Opacity"
                                    Value="0.5" />
                        </Trigger>

                        <!--左上角-->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsCorner"
                                           Value="True" />
                                <Condition Property="CornerPosition"
                                           Value="0" />
                            </MultiTrigger.Conditions>

                            <Setter Property="CornerRadius"
                                    TargetName="BorderRoot"
                                    Value="10 0 0 0">
                            </Setter>
                        </MultiTrigger>

                        <!--右上角-->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsCorner"
                                           Value="True" />
                                <Condition Property="CornerPosition"
                                           Value="1" />
                            </MultiTrigger.Conditions>

                            <Setter Property="CornerRadius"
                                    TargetName="BorderRoot"
                                    Value="0 10 0 0">
                            </Setter>
                        </MultiTrigger>

                        <!--右下角-->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsCorner"
                                           Value="True" />
                                <Condition Property="CornerPosition"
                                           Value="2" />
                            </MultiTrigger.Conditions>

                            <Setter Property="CornerRadius"
                                    TargetName="BorderRoot"
                                    Value="0 0 10 0">
                            </Setter>
                        </MultiTrigger>

                        <!--左下角-->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsCorner"
                                           Value="True" />
                                <Condition Property="CornerPosition"
                                           Value="3" />
                            </MultiTrigger.Conditions>

                            <Setter Property="CornerRadius"
                                    TargetName="BorderRoot"
                                    Value="0 0 0 10">
                            </Setter>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--收缩按钮样式-->
    <Style x:Key="CollapsedButtonStyle"
           TargetType="{x:Type localControl:GlobalCollapsedButton}">
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Width"
                Value="160">
        </Setter>

        <Setter Property="Height"
                Value="35">
        </Setter>

        <Setter Property="Foreground"
                Value="{StaticResource MenuButtonNormalForegroundBrush}">
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type localControl:GlobalCollapsedButton}">
                    <Border BorderThickness="0"
                            BorderBrush="{StaticResource MainBorderBrush}"
                            CornerRadius="30 30 0 0"
                            Background="{TemplateBinding Background}">
                        <Grid>
                            <Path Data="{TemplateBinding Tag}"
                                  Stretch="Uniform"
                                  Width="20"
                                  RenderTransformOrigin=".5 .5"
                                  x:Name="IconPath"
                                  Fill="{TemplateBinding Foreground}">
                            </Path>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>

                        <!--未收起-->
                        <Trigger Property="IsCollapsed"
                                 Value="False">
                            <Setter Property="RenderTransform"
                                    TargetName="IconPath">
                                <Setter.Value>
                                    <RotateTransform Angle="180"></RotateTransform>
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                        <!--收起-->
                        <Trigger Property="IsCollapsed"
                                 Value="True">
                            <Setter Property="RenderTransform"
                                    TargetName="IconPath">
                                <Setter.Value>
                                    <RotateTransform Angle="0"></RotateTransform>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--画笔粗细设置按钮样式-->
    <Style x:Key="GeometryRadioButtonDefaultStyle"
           TargetType="{x:Type localControl:GeometryRadioButton}">

        <Setter Property="Margin"
                Value="5" />

        <Setter Property="Padding"
                Value="0" />

        <Setter Property="Width"
                Value="50" />

        <Setter Property="Height"
                Value="50" />

        <Setter Property="Background"
                Value="#01000000" />

        <Setter Property="Foreground"
                Value="{StaticResource MenuButtonNormalForegroundBrush}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type localControl:GeometryRadioButton}">
                    <Border Background="{TemplateBinding Background}"
                            CornerRadius="4">
                        <Grid>
                            <Path Data="{TemplateBinding MainGeometry}"
                                  Stretch="Uniform"
                                  Fill="{TemplateBinding Foreground}"
                                  Width="26"
                                  Height="26"
                                  RenderTransformOrigin="0.5,0.5"
                                  FlowDirection="LeftToRight"
                                  x:Name="MainIconPath">
                                <Path.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform />
                                        <SkewTransform />
                                        <RotateTransform Angle="{Binding RelativeSource={RelativeSource TemplatedParent} , Path=MainRotateAngle}" />
                                        <TranslateTransform />
                                    </TransformGroup>
                                </Path.RenderTransform>
                            </Path>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMirror"
                                 Value="True">
                            <Setter Property="FlowDirection"
                                    Value="RightToLeft"
                                    TargetName="MainIconPath">
                            </Setter>
                        </Trigger>

                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Background"
                                    Value="{StaticResource SettingButtonSelectedBackgroundBrush}">
                            </Setter>
                        </Trigger>

                        <Trigger Property="IsChecked"
                                 Value="True">
                            <Setter Property="Background"
                                    Value="{StaticResource SettingButtonSelectedBackgroundBrush}">
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--默认使用 MenuButtonDefaultStyle 样式-->
    <Style TargetType="{x:Type localControl:MenuButton}"
           BasedOn="{StaticResource MenuButtonDefaultStyle}">

    </Style>

    <!--GeometryRadioButton 默认使用 GeometryRadioButtonDefaultStyle 样式-->
    <Style TargetType="{x:Type localControl:GeometryRadioButton}"
           BasedOn="{StaticResource GeometryRadioButtonDefaultStyle}">
    </Style>

    <Style TargetType="Button"
           x:Key="SubMenuButtonStyle">

        <Setter Property="HorizontalAlignment"
                Value="Left" />

        <Setter Property="VerticalAlignment"
                Value="Top" />

        <Setter Property="Background"
                Value="#01000000" />

        <Setter Property="Foreground"
                Value="{StaticResource MenuButtonNormalForegroundBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}">
                        <Grid>
                            <Path Data="{StaticResource GlobalMenuTriangleGeometry}"
                                  Stretch="Uniform"
                                  Margin="5 5 0 0"
                                  Fill="{TemplateBinding Foreground}"
                                  RenderTransformOrigin="0.5,0.5"
                                  FlowDirection="LeftToRight"
                                  Width="10"
                                  Height="10"
                                  HorizontalAlignment="Left"
                                  VerticalAlignment="Top"
                                  x:Name="SubIconPath">
                            </Path>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Foreground"
                                    Value="{StaticResource MenuButtonSelectedForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--EndRegion 样式管理-->

</ResourceDictionary>